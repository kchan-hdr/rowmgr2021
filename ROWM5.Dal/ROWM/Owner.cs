// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace ROWM.Dal
{
    [Table("Owner", Schema = "ROWM")]
    [Index(nameof(OwnerOwnerId), Name = "IX_Owner_OwnerId")]
    public partial class Owner
    {
        public Owner()
        {
            ContactInfos = new HashSet<ContactInfo>();
            ContactLogs = new HashSet<ContactLog>();
            InverseOwnerOwner = new HashSet<Owner>();
            NegotiationHistories = new HashSet<NegotiationHistory>();
            OwnerDocuments = new HashSet<OwnerDocument>();
            Ownerships = new HashSet<Ownership>();
        }

        [Key]
        public Guid OwnerId { get; set; }
        [StringLength(200)]
        public string PartyName { get; set; }
        [StringLength(50)]
        public string OwnerType { get; set; }
        public DateTimeOffset Created { get; set; }
        public DateTimeOffset LastModified { get; set; }
        [StringLength(50)]
        public string ModifiedBy { get; set; }
        [Column("Owner_OwnerId")]
        public Guid? OwnerOwnerId { get; set; }
        public string OwnerAddress { get; set; }
        public bool IsDeleted { get; set; }

        [ForeignKey(nameof(OwnerOwnerId))]
        [InverseProperty(nameof(Owner.InverseOwnerOwner))]
        public virtual Owner OwnerOwner { get; set; }
        [InverseProperty(nameof(ContactInfo.ContactOwner))]
        public virtual ICollection<ContactInfo> ContactInfos { get; set; }
        [InverseProperty(nameof(ContactLog.OwnerOwner))]
        public virtual ICollection<ContactLog> ContactLogs { get; set; }
        [InverseProperty(nameof(Owner.OwnerOwner))]
        public virtual ICollection<Owner> InverseOwnerOwner { get; set; }
        [InverseProperty(nameof(NegotiationHistory.Owner))]
        public virtual ICollection<NegotiationHistory> NegotiationHistories { get; set; }
        [InverseProperty(nameof(OwnerDocument.OwnerOwner))]
        public virtual ICollection<OwnerDocument> OwnerDocuments { get; set; }
        [InverseProperty(nameof(Ownership.Owner))]
        public virtual ICollection<Ownership> Ownerships { get; set; }
    }
}